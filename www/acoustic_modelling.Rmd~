---
title: "Model of acoustic loss"
author: "W. Bauer"
date: "03/31/2015"
output: html_document
---

Though based on optimistic assumptions, a value of 1 kPa was [obtained](energy_density.html) for acoustic pressure (a.k.a. energy density) generated by relaxation of dyes excited by externally applied NIR radiation. This is a reasonably good value, hence acoustic transmission losses between stained site and scalp are of interest.

Here we develop a back-of-the-envelope acoustic transmission model applicable to the BrainWeb discrete phantom. The general technique is "voxelized ray traversal," by which we mean that a "ray" is represented by the sequence of voxels which intersect a given line. As ultrasound traverses the ray, it accumulates losses due to absorption in voxel interiors and reflection at voxel boundaries. Reflected energy is ignored, even though it could reverberate to an extent. Angles of incidence and refraction are also ignored, though they would have significant effects at boundaries between bone and soft tissue. Refinements would be possible if called for.

In addition to these losses along a ray, there will be an inverse square loss due to spherical radiation from the stained site. In decibels this loss would be $10\:log_{10}(r^2)$ where $r$ is distance between the source and terminal voxel.

Acoustic properties for the phantom's 11 tissue types were guesstimated [here](acoustic_properties.html) and recorded in csv form [here](../data/acoustic_properties_bw.csv). A range was given for each property. To begin, random values from each range will be chosen for each tissue type (and for air.)

```{r}
properties <- read.table("../data/acoustic_properties_bw.csv", sep=",", header=TRUE)
rho <- runif(12, properties[,"rho.low"], properties[,"rho.high"])
speed <- runif(12, properties[,"c.low"], properties[,"c.high"])
alpha <- runif(12, properties[,"alpha.low"], properties[,"alpha.high"])
```

Absorption coefficients, alpha, are given in units of $dB/m/MHz$. Since the phantom's voxels are 1 mm on a side, we'll convert to $dB/mm/MHz$. 

```{r}
alpha <- alpha/1000
```

The other necessary quantities are transmission coefficients, also expressed in decibels of loss. These are most easily arranged in a matrix. The general formula for transmitted to (normally incident) power is$$10\:log_{10}\left(\frac{4Z_1Z_2}{(Z_1 + Z_2)^2}\right),$$where $Z_i = \rho_i c_i.$ There is no reflection between tissues with identical properties, hence some matrix elements will be zero.

```{r}
Z <- rho*speed
rc <- matrix(0, 12, 12)
for(i in 1:12){
  for(j in 1:12){
    if(Z[i] != Z[j]){
      rc[i,j] <- 10*log10(4*Z[i]*Z[j]/(Z[i]+Z[j])^2)
    }
  }
}
```

We'll use a small section of a sagittal slice for testing. A voxelized ray is shown in white. (The code which produced the figure is hidden for simplicity.)

```{r echo=FALSE, fig.align='center', fig.show='hold'}
source("../R/utilities.R")
fname <- "../data/subject04_crisp_v.rawb"
phantom <- readBin(fname, what="raw", n=362*434*362, size=1, signed=FALSE, endian="big")
dim(phantom) <- c(362, 434, 362)
slice <- phantom[100,,]
slice <- as.integer(slice)
dim(slice) <- c(434, 362)
rm(phantom)
section <- slice[280:350, 250:310]
# section[10,11] # gray
# section[30, 39] # muscle/skin next to scalp
temp <- findVoxelCrossings(c(0,10-.5,11-.5), c(0,30-.5,39-.5))
ray <- matrix(c(0,10,11), 1, 3)
for(n in seq(1, nrow(temp))){
  nxt <- ray[nrow(ray),]
  k <- temp[n,4]
  nxt[k] <- 1 + nxt[k]
  ray <- rbind(ray, nxt)
}
disp_slice(section, "Voxelized ray from gray matter to scalp")
points(ray[,2], ray[,3], pch=15, col="white")
```

The variable, `section`, below codes the sagittal section shown in the figure. The voxel sequence is contained the variable, `ray`. Since the pictured section is in the y, z plane, the first column of `ray` is irrelevant. We first obtain the sequence of tissue types along the ray.

```{r}
tissues <- sapply(1:nrow(ray), function(n){section[ray[n,2], ray[n,3]]})
```

We use the tissue sequence to calculate absorption loss.

```{r}
abs_loss <- sum(alpha[tissues])
```

Tissue transitions are used to calculate reflection losses.

```{r}
refl_loss <- -sum(sapply(2:length(tissues), function(n)rc[tissues[n-1]+1, tissues[n]+1]))
```

Finally, r-squared loss.

```{r}
rsq_loss <- 10*log10((30-10)^2 + (39-11)^2)
c(absorption=abs_loss, reflection=refl_loss, r_squared=rsq_loss)
```

R-squared loss is clearly dominant. To overcome the ~30 dB loss per square mm, a collection area of about 1000, or ~32x32, square mm would be required.

We'll consolidate the above code in appropriate utilities and make more thorough and representative runs in the near future. The code used here is visible in the associated [Rmd file](acoustic_1.Rmd).